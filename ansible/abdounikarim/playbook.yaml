---
- hosts: aws

  vars_files:
      - vault.yaml
      - ../vars.yaml

  pre_tasks:

      - name: Add PHP 7 PPA repository
        become: true
        apt_repository:
            repo: 'ppa:ondrej/php'

      - name: Add Certbot Repository (Let's Encrypt)
        become: true
        apt_repository:
            repo: 'ppa:certbot/certbot'

      - name: Update APT package manager repositories cache
        become: true
        apt:
            update_cache: yes

      - name: Install aptitude
        become: true
        apt:
            name: aptitude

      - name: Upgrade installed packages
        become: true
        apt:
            upgrade: safe

  tasks:
      - name: Install low-level utilities
        become: true
        apt:
            name:
                - zip
                - unzip

      - name: Install Git VCS
        become: true
        apt:
            name: git
            state: latest

      - name: Set MySQL root password before installing
        become: true
        debconf: name='mysql-server' question='mysql-server/root_password' value='{{ mysql_set_password_root | quote}}' vtype='password'

      - name: Confirm MySQL root password before installing
        become: true
        debconf: name='mysql-server' question='mysql-server/root_password_again' value='{{ mysql_set_password_root | quote}}' vtype='password'

      - name: Install MySQL DB server
        become: true
        apt:
            name: mysql-server
            state: latest

      - name: Install PHP packages
        become: true
        apt:
            name:
                - php{{ php_version }}-cli
                - php{{ php_version }}-curl
                - php{{ php_version }}-fpm
                - php{{ php_version }}-gd
                - php{{ php_version }}-intl
                - php{{ php_version }}-mbstring
                - php{{ php_version }}-mysql
                - php{{ php_version }}-opcache
                - php{{ php_version }}-xml
            state: latest
        notify: Restart PHP-FPM

      - name: Set date.timezone for CLI
        become: true
        ini_file:
            path: /etc/php/{{ php_version }}/cli/php.ini
            section: Date
            option: date.timezone
            value: UTC
        notify: Restart PHP-FPM

      - name: Set date.timezone for FPM
        become: true
        ini_file:
            path: /etc/php/{{ php_version }}/fpm/php.ini
            section: Date
            option: date.timezone
            value: UTC
        notify: Restart PHP-FPM

      - name: Increase OPcache limit of accelerated files
        become: true
        ini_file:
            path: /etc/php/{{ php_version }}/fpm/php.ini
            section: opcache
            option: opcache.max_accelerated_files
            value: '20000'
        notify: Restart PHP-FPM

      - name: Configure the PHP realpath cache size
        become: true
        ini_file:
            path: /etc/php/{{ php_version }}/fpm/php.ini
            section: PHP
            option: realpath_cache_size
            value: '4096K'
        notify: Restart PHP-FPM

      - name: Configure the PHP realpath cache ttl
        become: true
        ini_file:
            path: /etc/php/{{ php_version }}/fpm/php.ini
            section: PHP
            option: realpath_cache_ttl
            value: '600'
        notify: Restart PHP-FPM

      - name: Install Nginx web server
        become: true
        apt:
            name: nginx
            state: latest
        notify: Restart Nginx

      - name: Install Certbot
        become: true
        apt:
            name:
                - python-certbot-nginx
            state: latest

      - name : Delete the Nginx default config file
        become: true
        file:
            path: /etc/nginx/sites-enabled/default
            state: absent
        notify: Restart Nginx

      - name: Create project directory and set its permissions
        become: true
        file:
            path: "{{ symfony_projects_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            recurse: yes

      - name: Check for Composer
        stat:
            path: /usr/local/bin/composer
        register: composer_stat

      - name: Download Composer
        script: ./composer.sh
        when: not composer_stat.stat.exists

      - name: Move Composer globally
        become: true
        command: mv composer.phar /usr/local/bin/composer
        when: not composer_stat.stat.exists

      - name: Set permissions on Composer
        become: true
        file:
            path: /usr/local/bin/composer
            mode: "a+x"
        when: not composer_stat.stat.exists

      - name: Make sure composer is at its latest version
        become: true
        composer:
            working_dir: "{{ symfony_projects_dir }}"
            command: self-update
        register: composer_self_update
        changed_when: composer_self_update.stdout is not search('You are already using composer version')

      - name: Register NodeJS distribution
        become: true
        get_url:
            url: https://deb.nodesource.com/setup_13.x
            dest: /usr/local/bin
        changed_when: false

      - name: Install NodeJS
        become: true
        apt:
            name: nodejs
            state: latest
            update_cache: yes

      - name: Add Yarn APT key
        become: true
        apt_key:
            url: 'https://dl.yarnpkg.com/debian/pubkey.gpg'
            state: present

      - name: Add Yarn to the source lists
        become: true
        lineinfile:
            path: '/etc/apt/sources.list.d/yarn.list'
            regexp: 'deb https://dl.yarnpkg.com/debian/ stable main'
            line: 'deb https://dl.yarnpkg.com/debian/ stable main'
            create: yes

      - name: Install Yarn package manager
        become: true
        apt:
            name: yarn
            state: latest
            update_cache: yes

  handlers:
      - name: Restart PHP-FPM
        become: true
        service:
            name: php{{ php_version }}-fpm
            state: restarted

      - name: Restart Nginx
        become: true
        service:
            name: nginx
            state: restarted